# Header files need not be enumerated
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR} ${PROJECT_BINARY_DIR})

###########
# LIB AXL #
###########

# Install header files
LIST(APPEND libaxl_install_headers axl.h)

IF(MPI AND MPI_FOUND)
    LIST(APPEND libaxl_install_headers axl_mpi.h)
ENDIF(MPI AND MPI_FOUND)

INSTALL(FILES ${libaxl_install_headers} DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})

LIST(APPEND libaxl_srcs
    axl.c
    axl_sync.c
    axl_err.c
    axl_io.c
    axl_util.c
)

IF(HAVE_PTHREADS)
    LIST(APPEND libaxl_srcs axl_pthread.c)
ENDIF(HAVE_PTHREADS)

IF(BBAPI_FOUND)
    LIST(APPEND libaxl_srcs axl_async_bbapi.c)
ENDIF(BBAPI_FOUND)

IF(HAVE_DATAWARP)
    LIST(APPEND libaxl_srcs axl_async_datawarp.c)
ENDIF(HAVE_DATAWARP)

IF(HAVE_NNFDM)
    LIST(APPEND libaxl_srcs nnfdm.cpp)
ENDIF(HAVE_NNFDM)

# Default AXL library is withOUT MPI
ADD_LIBRARY(axl_o OBJECT ${libaxl_srcs})
TARGET_LINK_LIBRARIES(axl_o PRIVATE ${AXL_EXTERNAL_LIBS})

IF(BUILD_SHARED_LIBS)
    ADD_LIBRARY(axl SHARED $<TARGET_OBJECTS:axl_o>)
    ADD_LIBRARY(axl::axl ALIAS axl)
    TARGET_LINK_LIBRARIES(axl PUBLIC ${AXL_EXTERNAL_LIBS})
    TARGET_INCLUDE_DIRECTORIES(axl PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}> $<INSTALL_INTERFACE:include>)
    SET_TARGET_PROPERTIES(axl PROPERTIES OUTPUT_NAME axl CLEAN_DIRECT_OUTPUT 1)
    INSTALL(TARGETS axl EXPORT axlTargets LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR})
ENDIF()

ADD_LIBRARY(axl-static STATIC $<TARGET_OBJECTS:axl_o>)
ADD_LIBRARY(axl::axl-static ALIAS axl-static)
IF(AXL_LINK_STATIC)
    SET_TARGET_PROPERTIES(axl-static PROPERTIES LINK_SEARCH_START_STATIC 1)
    SET_TARGET_PROPERTIES(axl-static PROPERTIES LINK_SEARCH_END_STATIC 1)
ENDIF(AXL_LINK_STATIC)
TARGET_LINK_LIBRARIES(axl-static PUBLIC ${AXL_EXTERNAL_LIBS})
TARGET_INCLUDE_DIRECTORIES(axl-static PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}> $<INSTALL_INTERFACE:include>)

SET_TARGET_PROPERTIES(axl-static PROPERTIES OUTPUT_NAME axl CLEAN_DIRECT_OUTPUT 1)
INSTALL(TARGETS axl-static EXPORT axlTargets LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR})

# AXL library with MPI
LIST(APPEND libaxl_mpi_srcs ${libaxl_srcs})

IF(MPI AND MPI_FOUND)
    LIST(APPEND libaxl_mpi_srcs axl_mpi.c)
ENDIF(MPI AND MPI_FOUND)

ADD_LIBRARY(axl_mpi_o OBJECT ${libaxl_mpi_srcs})
TARGET_LINK_LIBRARIES(axl_mpi_o PRIVATE ${AXL_EXTERNAL_LIBS})
IF(MPI)
    TARGET_LINK_LIBRARIES(axl_mpi_o PRIVATE MPI::MPI_C)
ENDIF(MPI)

IF(BUILD_SHARED_LIBS)
    ADD_LIBRARY(axl_mpi SHARED $<TARGET_OBJECTS:axl_mpi_o>)
    ADD_LIBRARY(axl::axl_mpi ALIAS axl_mpi)
    TARGET_LINK_LIBRARIES(axl_mpi PUBLIC ${AXL_EXTERNAL_LIBS})
    IF(MPI)
        TARGET_LINK_LIBRARIES(axl_mpi PUBLIC MPI::MPI_C)
    ENDIF(MPI)
    TARGET_INCLUDE_DIRECTORIES(axl_mpi PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}> $<INSTALL_INTERFACE:include>)
    SET_TARGET_PROPERTIES(axl_mpi PROPERTIES OUTPUT_NAME axl_mpi CLEAN_DIRECT_OUTPUT 1)
    INSTALL(TARGETS axl_mpi EXPORT axlTargets LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR})
ENDIF()

ADD_LIBRARY(axl_mpi-static STATIC $<TARGET_OBJECTS:axl_mpi_o>)
ADD_LIBRARY(axl::axl_mpi-static ALIAS axl_mpi-static)
IF(AXL_LINK_STATIC)
    SET_TARGET_PROPERTIES(axl_mpi-static PROPERTIES LINK_SEARCH_START_STATIC 1)
    SET_TARGET_PROPERTIES(axl_mpi-static PROPERTIES LINK_SEARCH_END_STATIC 1)
ENDIF(AXL_LINK_STATIC)
TARGET_LINK_LIBRARIES(axl_mpi-static PUBLIC ${AXL_EXTERNAL_LIBS})
IF(MPI)
    TARGET_LINK_LIBRARIES(axl_mpi-static PUBLIC MPI::MPI_C)
ENDIF(MPI)
TARGET_INCLUDE_DIRECTORIES(axl_mpi-static PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}> $<INSTALL_INTERFACE:include>)

SET_TARGET_PROPERTIES(axl_mpi-static PROPERTIES OUTPUT_NAME axl_mpi CLEAN_DIRECT_OUTPUT 1)
INSTALL(TARGETS axl_mpi-static EXPORT axlTargets LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR})
