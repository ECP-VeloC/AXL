# Header files need not be enumerated
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR} ${PROJECT_BINARY_DIR})

###########
# LIB AXL #
###########

# Install header files
LIST(APPEND libaxl_install_headers
  axl.h
)
INSTALL(FILES ${libaxl_install_headers} DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})

LIST(APPEND libaxl_srcs
  axl.c
  axl_sync.c
  axl_async_daemon.c
  axl_async_datawarp.c
  axl_async_bbapi.c
#  axl_async_cppr.c
  axl_err.c
  axl_io.c
  axl_util.c
)

ADD_LIBRARY(axl_o OBJECT ${libaxl_srcs})

ADD_LIBRARY(axl SHARED $<TARGET_OBJECTS:axl_o>)
TARGET_LINK_LIBRARIES(axl ${AXL_EXTERNAL_LIBS})
SET_TARGET_PROPERTIES(axl PROPERTIES OUTPUT_NAME axl CLEAN_DIRECT_OUTPUT 1)
INSTALL(TARGETS axl DESTINATION ${CMAKE_INSTALL_LIBDIR})

ADD_LIBRARY(axl-static STATIC $<TARGET_OBJECTS:axl_o>)
IF(AXL_LINK_STATIC)
        SET_TARGET_PROPERTIES(axl-static PROPERTIES LINK_SEARCH_START_STATIC 1)
        SET_TARGET_PROPERTIES(axl-static PROPERTIES LINK_SEARCH_END_STATIC 1)
ENDIF(AXL_LINK_STATIC)
TARGET_LINK_LIBRARIES(axl-static ${AXL_EXTERNAL_LIBS})

SET_TARGET_PROPERTIES(axl-static PROPERTIES OUTPUT_NAME axl CLEAN_DIRECT_OUTPUT 1)
INSTALL(TARGETS axl-static DESTINATION ${CMAKE_INSTALL_LIBDIR})

################
# Async Daemon #
################

IF(AXL_ASYNC_DAEMON)

  LIST(APPEND axld_srcs
    axl_daemon.c
    axl_err.c
    axl_io.c
    axl_util.c
  )

  ADD_EXECUTABLE(axld ${axld_srcs})
  #SET_TARGET_PROPERTIES(axld PROPERTIES COMPILE_FLAGS ${KVTREE_INCLUDE_DIRS})
  #SET_TARGET_PROPERTIES(axld PROPERTIES LINK_FLAGS ${KVTREE_LIBRARIES})
  TARGET_LINK_LIBRARIES(axld ${KVTREE_LIBRARIES} ${ZLIB_LIBRARIES})
  INSTALL(PROGRAMS ${CMAKE_CURRENT_BINARY_DIR}/axld DESTINATION ${CMAKE_INSTALL_BINDIR})

ENDIF(AXL_ASYNC_DAEMON)
